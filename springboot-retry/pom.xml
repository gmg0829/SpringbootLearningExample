<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<!--pom版本-->
	<modelVersion>4.0.0</modelVersion>
	<!-- 项目的坐标信息-->
	<groupId>com.example</groupId>
	<artifactId>springboot-retry</artifactId>
	<!--
       第一个0:大版本:号
       第二个0：分支版本号
       第三个0：小版本号
       版本类型划分：1.SNAPSHOT(快照)
                     2.alpha（内测）
                     3.beta（公测）
                     4.Release（稳定）
                     5.GA（正式）
     -->
	<version>0.0.1-SNAPSHOT</version>
	<!--maven项目打包方式：默认：jar，可指定war、zip、pom-->
	<packaging>jar</packaging>
	<!--项目描述名-->
	<name>springboot-retry</name>
	<!--项目地址-->
	<url></url>
	<!--开发人员信息-->
	<developers>
		<developer>
			<!-- SCM里项目开发者的唯一标识符 -->
			<id>HELLO WORLD</id>
			<!-- 项目开发者的全名 -->
			<name>banseon</name>
			<!-- 项目开发者的email -->
			<email>banseon@126.com</email>
			<!-- 项目开发者的主页的URL -->
			<url />
			<!-- 项目开发者在项目中扮演的角色，角色元素描述了各种角色 -->
			<roles>
				<role>Project Manager</role>
				<role>Architect</role>
			</roles>
			<!-- 项目开发者所属组织 -->
			<organization>demo</organization>
			<!-- 项目开发者所属组织的URL -->
			<organizationUrl>http://hi.baidu.com/banseon</organizationUrl>
			<!-- 项目开发者属性，如即时消息如何处理等 -->
			<properties>
				<dept>No</dept>
			</properties>
			<!-- 项目开发者所在时区， -11到12范围内的整数。 -->
			<timezone>-5</timezone>
		</developer>
	</developers>
	<!--许可证信息-->
	<licenses></licenses>
	<!--组织信息-->
	<organization>
		<!-- 组织的全名 -->
		<name>demo</name>
		<!-- 组织主页的URL -->
		<url>http://www.baidu.com/banseon</url>
	</organization>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
   <!--定义一些常量-->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
    <!--插件列表-->
	<build>
		<!-- 产生的构件的文件名，默认值是${artifactId}-${version}-->
		<finalName>myPorjectName</finalName>
		<!-- 构建产生的所有文件存放的目录,默认为${basedir}/target，即项目根目录下的target -->
		<directory>${basedir}/target</directory>
		<resources>
			<resource>
				<!--描述存放资源的目录，该路径相对POM路径 -->
				<directory>src/main/resources</directory>

				<!--包含的模式列表 -->
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>

				<!--排除的模式列表 如果<include>与<exclude>划定的范围存在冲突，以<exclude>为准 -->
				<excludes>
					<exclude>jdbc.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<distributionManagement>

	</distributionManagement>


</project>
